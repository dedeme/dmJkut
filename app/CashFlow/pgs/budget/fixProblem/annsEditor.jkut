// Copyright 03-Sep-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Budget annotation editor.

import "data/diary";
import "wgs/numberField";
import "i18n";

Q = ui.q;
II = i18n.tlt;

/// Constructor.
///   wg: Container.
///   Entry: Diary entry.
///   fnOk : Function to run when a valid entry is accepted.
/// \<domo>, <diaryEntry>, (\->()) ->
///   {active: \b -> (), updateAccount: \s -> ()}
mk = \wg, Entry, fnOk -> {
  am = Entry.am;
  Anns = Entry.anns;
  Sels = []; //[<domo>.]
  for (i = 0:arr.size(Anns))
    arr.push(Sels, Q("input")
      .att("type", "radio")
      .att("id", "in" + i)
      .att("name", "selAnn")
    );
  Sels[0].checked(true);

  activatedV = [false];

  showV = [[]];

  // Control -------------------------------------------------------------------

  // \b -> ()
  active = \value -> {
    activatedV! = value;
    showV!();
  };

  // \s -> ()
  updateAccount = \acc -> {
    ixV = [0];
    for (i = [0:arr.size(Anns)])
        if (Sels[i].isChecked()) {
          Anns[i] = diary.mkAnnotation(acc, diary.annAm(Anns[i]));
          ixV! = i;
        }

    showV!();
    Q("#nf" + ixV!).e.focus();
  };

  // \s, n -> ()
  updateAmount = \fieldId, newValue -> {
    i = math.fromStr(fieldId[2:])!;
    oldAnn = Anns[i];
    Anns[i] = diary.mkAnnotation(diary.annId(oldAnn), newValue);
    sum = iter.reduce(
      [0:arr.size(Anns) - 1], 0, \r, i -> return r + diary.annAm(Anns[i]);
    );

    if (sum > am) {
      ui.alert(i18n.fmt(
        II("Sum of account values (%0) is greater than cash value (%1)"),
        [math.toIso(sum, 2), math.toIso(am, 2)]
      ));
      Anns[i] = oldAnn;
      showV!();
      Q("#" + fieldId).e.focus();
      return;
    }

    lastAnn = arr.peek(Anns);
    Anns[arr.size(Anns) - 1] = diary.mkAnnotation(
      diary.annId(lastAnn), am - sum
    );
    showV!();
  };

  // \<event> -> ()
  addAcc = \ev -> {
    i = arr.size(Anns);
    arr.push(Sels, Q("input")
      .att("type", "radio")
      .att("id", "in" + i)
      .att("name", "selAnn")
      .checked(true)
    );
    arr.push(Anns, diary.mkAnnotation("", 0));
    showV!();
  };

  // \<event> -> ()
  delAcc = \ev -> {
    arr.pop(Sels);
    arr.pop(Anns);

    Sels[0].checked(true);

    sum = iter.reduce(
      [0:arr.size(Anns) - 1], 0, \r, i -> return r + diary.annAm(Anns[i]);
    );
    lastAnn = arr.peek(Anns);
    Anns[arr.size(Anns) - 1] = diary.mkAnnotation(
      diary.annId(lastAnn), am - sum
    );
    showV!();
  };

  // \<event> -> ()
  ok = \ev -> {
    sumV = [0];
    ixV = [1];
    for (a = Anns) {
      if (diary.annId(a) == "") {
        ui.alert(i18n.fmt(
          II("Account of annotation '%0' is missing"), ["" +ixV!]
        ));
        return;
      }
      sumV! += diary.annAm(a);
      ixV! += 1;
    }

    if (!math.eq(sumV!, am, 0.0001)) {
      ui.alert(i18n.fmt(
        II("Sum of annotations (%0) does not match the cash value (%1)"),
        [math.toIso(sumV!, 2), math.toIso(am, 2)]
      ));
      return;
    }

    fnOk();
  };

  // \s -> ()
  fastOk = \acc -> {
    if (arr.size(Anns) != 1) {
      ui.alert(II("Fast ok only works with one entry"));
      return;
    }
    Anns[0] = diary.mkAnnotation(acc, diary.annAm(Anns[0]));
    ok([]);
  };

  // View ----------------------------------------------------------------------

  // \ -> ()
  showV! = \ -> {
    wg.removeAll();
    if (!activatedV!) return;

    wg
      .add(Q("table")
      .klass("main")
      .adds(iter.map([0:arr.size(Anns)], \i -> return Q("tr")
          .add(Q("td")
            .style("width: 5px")
            .add(Sels[i]))
          .add(Q("td")
            .klass("frameTx")
            .text(diary.annId(Anns[i]) == "" ? "---" : diary.annId(Anns[i])))
          .add(Q("td")
            .add(numberField.mk(
                "nf" + i,
                "in" + (i == arr.size(Anns) - 1 ? 0 : i + 1),
                diary.annAm(Anns[i]),
                updateAmount)))
        ;))
      .add(Q("tr")
        .add(Q("td")
          .att("colspan", "3")
          .add(Q("hr"))))
      .add(Q("tr")
        .add(Q("td")
          .style("text-align: left")
          .add(ui.link(addAcc).add(ui.img("add"))))
        .add(Q("td")
          .style("text-align: left")
          .add(arr.size(Anns) > 1
              ? ui.link(delAcc).add(ui.img("delete"))
              : ui.lightImg("delete")
            ))
        .add(Q("td")
          .style("text-align: right")
          .add(ui.link(\ev -> fastOk("HOSTEL");)
            .klass("link")
            .setStyle("vertical-align", "top")
            .text("H"))
          .add(Q("span").html("&nbsp;"))
          .add(ui.link(\ev -> fastOk("SUPERS");)
            .klass("link")
            .setStyle("vertical-align", "top")
            .text("S"))
          .add(Q("span").html("&nbsp;"))
          .add(ui.link(\ev -> fastOk("VACAS");)
            .klass("link")
            .setStyle("vertical-align", "top")
            .text("V"))
          .add(Q("span").html("&nbsp;&nbsp;&nbsp;&nbsp;"))
          .add(ui.link(ok).add(ui.img("ok")))

          )))
    ;
  };

  showV!();

  return {active, updateAccount};
};

