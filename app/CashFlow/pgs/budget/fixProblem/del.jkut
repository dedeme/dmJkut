// Copyright 04-Sep-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Delete editor

import "delEditor";
import "i18n";

Q = ui.q;
II = i18n.tlt;

/// Constructor.
///   tr: Container row.
///   CEntry: Diary entry.
///   ix : Index of CEntry.
///   activated: 'true' if deletion is activated.
///   deactivateAllFn: Function to deactivate all operations.
///   updateFn: Diary update. It takes as argument 'ix'.
/// \<domo>, <diaryEntry>, n, b, (\->()), (\n->()) ->
///     {deactivate: \->(), updateAccount: \s->()}
mk = \tr, CEntry, ix, activated, deactivateAllFn, updateFn -> {
  activatedV = [activated];

  imgDiv = Q("div");
  annsDiv = Q("div");

  showV = [[]];


  // Control -------------------------------------------------------------------

  // \ -> ()
  activate = \ -> {
    deactivateAllFn();
    activatedV! = true;
    showV!();
  };

  // \[<diaryAnnotation>.] -> ()
  update = \ -> {
    updateFn(ix);
  };

  DelEd = delEditor.mk(annsDiv, CEntry, update);

  // \ -> ()
  deactivate = \ -> {
    activatedV! = false;
    showV!();
  };

  // \s -> ()
  updateAccount = \acc -> {
    // do nothing
  };

  // View ----------------------------------------------------------------------

  // \ -> ()
  showV! = \ -> {
    if (activatedV!) {
      imgDiv
        .removeAll()
        .klass("frame")
        .add(ui.lightImg("delete"))
      ;
      DelEd.active(true);
    } else {
      imgDiv
        .removeAll()
        .add(ui.link(\ev -> activate();)
          .klass("link")
          .add(ui.img("delete")))
      ;
      DelEd.active(false);
    }

    tr
      .removeAll()
      .add(Q("td")
        .add(imgDiv))
      .add(Q("td")
        .klass("frameTx")
        .text(CEntry.month))
      .add(Q("td")
        .klass("frameTx")
        .add(Q("div")
          .text(CEntry.desc))
        .add(annsDiv))
      .add(Q("td")
        .klass("frameNm")
        .text(math.toIso(CEntry.am, 2)))

      .add(Q("td"))

      .add(Q("td"))
      .add(Q("td"))
      .add(Q("td"))
    ;
  };

  showV!();

  return {deactivate, updateAccount};
};
