// Copyright 04-Sep-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Annotation delete editor

import "data/diary";
import "i18n";

Q = ui.q;
II = i18n.tlt;

/// Constructor.
///   wg: Container.
///   Entry: Diary entry.
///   fnOk : Function to run when a valid entry is accepted.
/// \<domo>, <diaryEntry>, (\->()) ->
///   {active: \b -> ()}
mk = \wg, Entry, fnOk -> {
  am = Entry.am;
  Anns = Entry.anns;

  activatedV = [false];

  showV = [[]];

  // Control -------------------------------------------------------------------

  // \b -> ()
  active = \value -> {
    activatedV! = value;
    showV!();
  };

  // \<event> -> ()
  ok = \ev -> {
    sumV = [0];
    ixV = [1];
    for (a = Anns) {
      if (diary.annId(a) == "") {
        ui.alert(i18n.fmt(
          II("Account of annotation '%0' is missing"), ["" +ixV!]
        ));
        return;
      }
      sumV! += diary.annAm(a);
      ixV! += 1;
    }

    if (!math.eq(sumV!, am, 0.0001)) {
      ui.alert(i18n.fmt(
        II("Sum of annotations (%0) does not match the cash value (%1)"),
        [math.toIso(sumV!, 2), math.toIso(am, 2)]
      ));
      return;
    }

    fnOk();
  };

  // View ----------------------------------------------------------------------

  // \ -> ()
  showV! = \ -> {
    wg.removeAll();
    if (!activatedV!) return;

    wg
      .add(Q("table")
      .klass("main")
      .adds(iter.map([0:arr.size(Anns)], \i -> return Q("tr")
            .add(Q("td")
              .klass("frameTx")
              .text(diary.annId(Anns[i]) == "" ? "---" : diary.annId(Anns[i])))
            .add(Q("td")
              .klass("frameNm")
              .text(math.toIso(diary.annAm(Anns[i]), 2)))
        ;))
      .add(Q("tr")
        .add(Q("td")
          .att("colspan", "3")
          .add(Q("hr"))))
      .add(Q("tr")
        .add(Q("td"))
        .add(Q("td"))
        .add(Q("td")
          .style("text-align: right")
          .add(ui.link(ok).add(ui.img("ok"))))))
    ;
  };

  showV!();

  return {active};
};
