// Copyright 28-Jul-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Historic chart page.

import "libdm/lineChart";
import "data/cts";
import "i18n";

Q = ui.q;
II = i18n.tlt;

/// \<domo>, n, n, [n, n] -> ()
mk = async \wg, daysWin, daysLoss, Params -> {
  Rp = await client.send({
    prg: cts.appName,
    source: "HistoricPg",
    rq: "idata",
    daysWin,
    daysLoss,
    params: Params
  });
  Dates = Rp.dates; // [s...]
  Assets = Rp.assets; // [n...]
  Withdrawals = Rp.withdrawals; // [n...]

  // \b -> <domo>
  mkGr = \isAssets -> {
    Labels = arr.map(Dates, \d -> return d[4:6];);

    Ch = lineChart.mkExample();
    Ch.ExArea.width = 600;
    Ch.ExArea.height = isAssets ? 300 : 150;
    Ch.InPadding.left = 100;
    Ch.ExArea.Atts.background = "#ffffff";
    Ch.InAtts.background = "#e9e9e9";

    Data = lineChart.mkData(
      Labels,
      isAssets
        ? [arr.map(Assets, \e->return [e];)]
        : [arr.map(Withdrawals, \e->return [e];)],
      [ lineChart.mkLine(1, "#000000", false)]
    );
    Data.round = 0;
    PrevLabel = [Labels[0]];
    Data.drawLabel = \l, i -> {
      if (i == 0) return false;
      if (l != PrevLabel! & (l == "01" | l == "04" | l == "07"| l == "10")) {
        PrevLabel! = l;
        return true;
      }
      return false;
    };
    PrevLabel2 = [Labels[0]];
    Data.drawGrid = \l, i -> {
      if (i == 0) return false;
      if (l != PrevLabel2! & (l == "01" | l == "04" | l == "07"| l == "10")) {
        PrevLabel2! = l;
        return true;
      }
      return false;
    };

    return lineChart.mkWg(Ch, Data);
  };

  wg
    .removeAll()
    .add(Q("div")
      .klass("head")
      .text(II("Assets")))
    .add(Q("table")
      .att("align", "center")
      .add(Q("tr")
        .add(Q("td")
          .add(mkGr(true)))))
    .add(Q("div")
      .klass("head")
      .text(II("Withdrawals")))
    .add(Q("table")
      .att("align", "center")
      .add(Q("tr")
        .add(Q("td")
          .add(mkGr(false)))))
  ;
};
