// Copyright 26-Jul-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Application entry.

import "data/cts";
import "i18n";

Q = ui.q;
II = i18n.tlt;

// \n, n, n -> s
color = \max, min, value -> {
  df = max - min;
  red = math.toInt((max - value) * 256 / df );
  blue = math.toInt((value - min) * 256 / df );
  return "rgb(" + red + ",80," + blue + ")";
};


/// \<domo>, [n, n], [n,n], [[[n,n,n,n]...]...] -> ()
mk = \wg, ParStart, ParStep, Results -> {
  Url = ui.url();
  MaxMin = [Results[0][0][2], Results[0][0][2]];
  for (Row = Results) for (V = Row) {
    v = V[2];
    if (v > MaxMin[0]) MaxMin[0] = v;
    if (v < MaxMin[1]) MaxMin[1] = v;
  }

  max = MaxMin[0];
  min = MaxMin[1];

  ncols = arr.size(Results[0]);
  sV = [ParStart[0]];
  aV = [ParStart[1]];
  sInc = ParStep[0];
  aInc = ParStep[1];
  wg
    .removeAll()
    .add(Q("table")
      .klass("flat")
      .att("align", "center")
      .add(Q("tr")
        .add(Q("td"))
        .add(Q("td")
          .klass("rhead")
          .text(II("Start")))
        .adds(arr.fromIter(iter.map([0:ncols], \i -> return Q("td");))))
      .add(Q("tr")
        .add(Q("td")
          .klass("rhead")
          .text(II("Approximation")))
        .add(Q("td"))
        .adds(arr.fromIter(iter.map([1:ncols], \i -> {
            r = Q("td")
              .klass("rframe")
              .style("font-size:small")
              .text(math.toIso(aV! * 100, 2));
            aV! += aInc;
            return r;
          }))))
      .adds(arr.fromIter(iter.map([1: arr.size(Results)], \i -> {
          a2V = [ParStart[1]];
          r = Q("tr")
            .add(Q("td"))
            .add(Q("td")
              .klass("rframe")
              .style("font-size:small")
              .text(math.toIso(sV! * 100, 2)))
            .adds(arr.fromIter(iter.map([1:ncols], \j -> {
                s = sV!;
                a2 =a2V!;
                r = Q("td")
                  .klass("border")
                  .att("title", math.toIso(Results[i][j][2], 0))
                  .style(
                      "cursor:pointer;" +
                      "background:" + color(max, min, Results[i][j][2])
                    )
                  .on("click", \e -> window.location.assign(
                      "?" + Url["0"] +
                      "&" + Url["1"] +
                      "&charts" +
                      "&" + math.round(s, 4) +
                      "&" + math.round(a2, 4)
                    ););
                a2V! += aInc;
                return r;
              })));
          sV! += sInc;
          return r;
        }))))
    ;
};

