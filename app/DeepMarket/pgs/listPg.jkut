// Copyright 26-Jul-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Application entry.

import "data/cts";
import "i18n";

Q = ui.q;
II = i18n.tlt;

/// \<domo>, b, [n,n], [n,n], [n,n], [[[n,n,n,n]...]...] -> ()
mk = \wg, isNear, ParNearStart, ParFarStart, ParStep, Results -> {
  Url = ui.url();

  incS = ParStep[0];
  incA = ParStep[1];
  ParStart = isNear ? ParNearStart : ParFarStart;
  Rows = []; // [n, n, n, n, n, n] :: [p1, p2, as, pr, po, sa]
  sV = [ParStart[0]]; // start parameter 'start'.
  for (RR = Results) {
    aV = [ParStart[1]]; // start parameter 'approximation'.
    for (R = RR) {
      arr.push(
        Rows,
        [math.round(sV!, 4), math.round(aV!, 4), R[0], R[1], R[2], R[3]]
      );
      aV! += incA;
    }
    sV! += incS;
  }
  arr.sort(Rows, \R1, R2 -> return R1[4] == R2[4]
    ? R1[2] > R2[2]
    : R1[4] > R2[4]
  ;);

  // Control -------------------------------------------------------------------

  // \n, n -> ()
  center = \pStart, pAppr -> {
    incNS = math.round(isNear ? incS : incS / 2, 4);
    incNA = math.round(isNear ? incA : incA / 2, 4);
    sTop = ParFarStart[0] + cts.simSteps * incNS;
    aTop = ParFarStart[1] + cts.simSteps * incNA;

    start0 = pStart - (cts.simSteps / 2) * incNS;
    start = math.round(
      start0 >= ParFarStart[0]
        ? start0 <= sTop
          ? start0
          : sTop
        : ParFarStart[0]
      , 4
    );
    appr0 = pAppr - (cts.simSteps / 2) * incNA;
    appr = math.round(
      appr0 >= ParFarStart[1]
        ? appr0 <= aTop
          ? appr0
          : aTop
        : ParFarStart[1],
      4
    );

    currentStart = ParNearStart[0];
    currentAppr = ParNearStart[1];

    if (!ui.confirm(i18n.fmt(
      II("Change near start corner from\n[%0, %1]\nto\n[%2, %3]?"),
      [currentStart, currentAppr, start, appr]
    ))) return;

    client.send({
      prg: "DeepMarket",
      source: "ListPg",
      rq: "center",
      days: "[" + Url["0"] + "-" + Url["1"] + "]",
      start,
      appr
    });

    ui.alert(i18n.fmt(
      II("Soon the near star corner will be changed to\n[%0, %1]"),
      [start, appr]
    ));
  };

  // View ----------------------------------------------------------------------

  wg
    .removeAll()
    .add(Q("table")
      .att("align", "center")
      .klass("flat")
      .add(Q("tr")
        .add(Q("td"))
        .add(Q("td"))
        .add(Q("td")
          .klass("rhead")
          .text(II("Start")))
        .add(Q("td")
          .klass("rhead")
          .text(II("Appr.")))
        .add(Q("td").klass("rhead"))
        .add(Q("td")
          .klass("rhead")
          .text(II("Assets")))
        .add(Q("td")
          .klass("rhead")
          .text(II("Prfs.")))
        .add(Q("td")
          .klass("rhead")
          .text(II("Eval.")))
        .add(Q("td")
          .klass("rhead")
          .text(II("Sls."))))
      .adds(arr.map(Rows, \R -> return Q("tr")
        .add(Q("td")
          .add(ui.link(\e -> center(R[0], R[1]);)
            .klass("link")
            .add(ui.img("center"))))
        .add(Q("td")
          .add(Q("a")
            .klass("link")
            .att(
                "href",
                "?" + Url["0"] +
                "&" + Url["1"] +
                "&charts" +
                "&" + R[0] +
                "&" + R[1]
              )
            .add(ui.img("see"))))
        .add(Q("td")
          .klass("rframe")
          .text(math.toIso(R[0], 4)))
        .add(Q("td")
          .klass("rframe")
          .text(math.toIso(R[1], 4)))
        .add(Q("td").klass("rhead"))
        .add(Q("td")
          .klass("rframe")
          .text(math.toIso(R[2], 2)))
        .add(Q("td")
          .klass("rframe")
          .text(math.toIso(R[3] * 100, 2) + "%"))
        .add(Q("td")
          .klass("rframe")
          .text(math.toIso(R[4], 0)))
        .add(Q("td")
          .klass("rframe")
          .text(math.toIso(R[5], 0)));
        )))
  ;
};
