// Copyright 22-Jul-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Flea Data.

import "cts";

/// Constructor.
///   id     : Identifier.
///   cycle  : Creation cycle.
///   model  : Trading model id.
///   params : Model parameters.
///   assets : Assets (money) after models evaluation.
///            Mutable field using 'update'.
///   profits: Profits (ratio) after models evaluation.
///            Mutable field using 'update'.
///   points : Result of flea.evaluate(assets, profits).
///   sales  : Sales of period.
/// \n, n, s, [n...], n, n, n, n -> d<flea>
mk = \id, cycle, model, params, assets, profits, points, sales ->
  return {id, cycle, model, params, assets, profits, points, sales};;

/// Evaluate flea results in the same way that CMMarket.
/// A result of '1000' indicates neither profits nor losses.
///   assets : Assets (money).
///   profits: Profits (ratio).
/// \f, f -> f
evaluate = \assets, profits -> return math.toInt(
    ( assets * cts.assetsRatio / cts.maxAssets +
        (1.0 + profits) * cts.profitsAvgRatio / cts.maxProfitsAvgRatio
      ) * 3000.0
  );;

/// Default order.
/// \<flea>, <flea> -> b
greater = \F1, F2 -> return
  F1.points == F2.points
    ? F1.assets == F2.assets
      ? F1.profits > F2.profits
      : F1.assets > F2.assets
    : F1.points > F2.points
  ;;

/// \JS -> <flea>
fromJs = \A -> return mk(
    A[0],
    A[1],
    A[2],
    A[3],
    A[4],
    A[5],
    evaluate(A[4], A[5]),
    A[6]
  );;

