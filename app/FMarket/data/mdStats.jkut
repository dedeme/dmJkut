// Copyright 16-May-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Model - statistics data.

import "flea";

/// Constructor
///   modelIds  : Model identifiers.
///   duplicates: Number of investors with the models.
/// \[s...], n -> <group>
mkGroup = \ModelIds, duplicates -> return {ModelIds, duplicates};;

/// \<group> -> s
groupFormatIds = \G -> return arr.join(arr.map(G.ModelIds, \id -> {
    Id = [id];
    while (str.len(Id!) < 5) Id! += " ";
    return Id!;
  }), " | ");;

/// \[*(JS)...] -> <group>
groupFromJs = \A -> return mkGroup(A[0], A[1]);;

/// Tuple with (position in the list of all the fleas, flea).
/// \n, <flea> -> <orderFlea>
mkOrderFlea = \order, Flea -> return {order, Flea};;

/// \[*(JS)...] -> <orderFlea>
orderFleaFromJs = \A -> return mkOrderFlea(A[0], flea.fromJs(A[1]));;

/// Model statistics
/// \s, [<orderFlea>...], [<orderFlea>...], n, n, n -> <model>
mkModel = \modelId, Bests, Worsts, nfleas, position, assets -> return {
    modelId, Bests, Worsts, nfleas, position, assets
  };;

/// \[*(JS)...] -> <orderFlea>
modelFromJs = \A -> return mkModel(
    A[0],
    arr.map(A[1], orderFleaFromJs),
    arr.map(A[2], orderFleaFromJs),
    A[3],
    A[4],
    A[5]
  );;

/// Constructor.
///   Models: Flea models.
///   GroupsRanking: Ranking of investors.
/// \[<model>...], [<group>...] -> <mdStats>
mk = \Models, GroupsRanking -> return {Models, GroupsRanking};;

/// \[*(JS)...] -> <orderFlea>
fromJs = \A -> return mk(
    arr.map(A[0], modelFromJs),
    arr.map(A[1], groupFromJs)
  );;
