// Generate by jkutI18n. Don't modify

/// Internationalization management.

esDic = {
  "2 Days": "2 días",
  "Active": "Activo",
  "All": "Todo",
  "All log entries will be deleted.\nContinue?": "Todas las entradas serán borradas.\n¿Continuar?",
  "Assets": "Patrimonio",
  "Average": "Media",
  "Best": "Mejor",
  "Click %0 to continue.": "Click %0 para continuar.",
  "Cy.": "Ci.",
  "Cycle": "Ciclo",
  "Delete": "Borrar",
  "Errors": "Errores",
  "Fleas": "Pulgas",
  "Home": "Inicio",
  "Id.": "Id.",
  "KtWeb session is closed.\nAuthenticating from KtWeb:Main.": "La sesión de KtWeb ha sido cerrada.\nHay que autenticarse en KtWeb:Main.",
  "Log": "Registro",
  "P1": "P1",
  "P2": "P2",
  "Points": "Puntos",
  "Profits": "Beneficios",
  "Rankings": "Clasificaciones",
  "Reload": "Recargar",
  "Sales": "Ventas",
  "Session is expired.": "Las sesión ha expirado.",
  "Start": "Comenzar",
  "Stop": "Detener",
  "Stopped": "Detenido",
  "Summary": "Resumen",
  "Worst": "Peor",
  "here": "aquí"
};
/// \-> ()
es = \-> Lang! = "es";;

enDic = {
  "2 Days": "2 Days",
  "Active": "Active",
  "All": "All",
  "All log entries will be deleted.\nContinue?": "All log entries will be deleted.\nContinue?",
  "Assets": "Assets",
  "Average": "Average",
  "Best": "Best",
  "Click %0 to continue.": "Click %0 to continue.",
  "Cy.": "Cy.",
  "Cycle": "Cycle",
  "Delete": "Delete",
  "Errors": "Errors",
  "Fleas": "Fleas",
  "Home": "Home",
  "Id.": "Id.",
  "KtWeb session is closed.\nAuthenticating from KtWeb:Main.": "KtWeb session is closed.\nAuthenticating from KtWeb:Main.",
  "Log": "Log",
  "P1": "P1",
  "P2": "P2",
  "Points": "Points",
  "Profits": "Profits",
  "Rankings": "Rankings",
  "Reload": "Reload",
  "Sales": "Sales",
  "Session is expired.": "Session is expired.",
  "Start": "Start",
  "Stop": "Stop",
  "Stopped": "Stopped",
  "Summary": "Summary",
  "Worst": "Worst",
  "here": "here"
};
/// \-> ()
en = \-> Lang! = "en";;

//\s -> {s...}
dicByKey = \s -> return switch (s) {
  "es": esDic;
  "en": enDic;
  default: "Unreachable";
};;

Lang = ["es"];
/// \-> s
getLang = \-> return Lang!;;

/// \s -> s
tlt = \s -> {
  T = dic.get(dicByKey(Lang!), s);
  return T ? T! : s;
};

/// \s, [s...] -> s
fmt = \tp, Rpls -> {
  R = [tp];
  for (i = 0:arr.size(Rpls)) R! = str.replace(R!, "%" + sys.toStr(i), Rpls[i]);
  return R!;
};
