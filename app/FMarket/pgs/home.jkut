// Copyright 16-May-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Home page

import "libdm/log";
import "data/cts";
import "i18n";

Q = ui.q;
II = i18n.tlt;

/// \<domo> -> ()
mk = async \wg -> {
  Rp = await client.send({
    prg: cts.appName,
    source: "Home",
    rq: "idata"
  });
  activity = Rp.activity;

  activities = {
    stopped: II("Stopped"),
    active: II("Active")
  };

  logDiv = Q("div");

// Control ---------------------------------------------------------------------

  activate = async \ev -> {
    await client.send({
      prg: cts.appName,
      source: "Home",
      rq: "activate"
    });
    window.location.reload(true);
  };

  deactivate = async \ev -> {
    await client.send({
      prg: cts.appName,
      source: "Home",
      rq: "deactivate"
    });
    window.location.reload(true);
  };

// View ------------------------------------------------------------------------

  // \-> ()
  show = \ -> {
    // \(\[<logRow>...]->()) -> ()
    load = async \fn -> {
      Rp = await client.send({
        prg: cts.appName,
        source: "Home",
        rq: "getLog"
      });
      fn(arr.map(Rp.log, log.logRowFromJs));
    };

    // \(\->()) -> ()
    reset = async \fn -> {
      await client.send({
        prg: cts.appName,
        source: "Home",
        rq: "resetLog"
      });
      fn();
    };

    // \s -> s
    tlt = \tx -> return switch (tx) {
      "All log entries will be deleted.\nContinue?":
        II("All log entries will be deleted.\nContinue?");
      "2 Days": II("2 Days");
      "All": II("All");
      "Reload": II("Reload");
      "Delete": II("Delete");
      "Errors": II("Errors");
      "Log": II("Log");
      default: tx;
    };;

    log.mk(logDiv, load, reset, tlt, true, 100, 25);

    wg
      .removeAll()
      .add(Q("div")
        .klass("head")
        .text(II("Cycle")))
      .add(Q("table")
        .att("align", "center")
        .add(Q("tr")
          .add(Q("td")
            .klass("frame")
            .style("text-align: center")
            .text(activities[activity])))
        .add(Q("tr")
          .add(Q("td")
            .style("width:100px;text-align:center")
            .add(activity != "stopped"
                ? ui.link(deactivate)
                  .klass("link")
                  .text(II("Stop"))
                : ui.link(activate)
                  .klass("link")
                  .text(II("Start"))
              ))))
      .add(Q("hr"))
      .add(logDiv)
    ;
  };

  show();

};

