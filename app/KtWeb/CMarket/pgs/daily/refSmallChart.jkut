// Copyright 12-Feb-2024 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Small references chart.

import "libdm/lineChart";
import "i18n";

Q = ui.q;
II = i18n.tlt;

/// Creates company chart.
///   Labels: Chart labels.
///   Values: Chart values.
///   inPortfolio: 'true' if company is in portfolio.
/// \[s.], [[[f].].], b -> <domo>
mk = \Labels, Values, inPortfolio -> {
  q = arr.peek(Values[0])!;
  back = q < 0
    ? inPortfolio
      ? "#f0f0ff"
      : "#fff0f0"
    : "#f5f5f5"
  ;
  line = inPortfolio ? "#ff8100" : "#00aaff";

  chart = lineChart.mkExample();
  chart.exArea.width = 140;
  chart.exArea.height = 70;
  chart.exArea.atts.border.width = 0;
  chart.inPadding.left = 32;
  chart.inPadding.right = 5;
  chart.inPadding.bottom = 5;
  chart.labels.show = false;
  chart.xAxis.fontSize = 0;
  chart.yAxis.fontSize = 10;
  chart.yAxis.parts = 1;

  chart.exArea.atts.background = back;

  Atts = [
    lineChart.mkLine(1.2, line, false)
  ];
  data = lineChart.mkData(Labels, Values, Atts);
  data.drawGrid = \lb, i -> {
    if (i == 0) return false;
    if (i == 1) return true;
    return Labels[i - 1] != lb;
  };
  data.drawLabel = \lb, i -> return false;;
  data.maxMinRound = \mx, mn -> {
    data.round = 0;
    return 0;
  };

  return Q("table")
    .att("align", "center")
    .add(Q("tr")
      .add(Q("td")
        .klass("frame0")
        .style("background-color:" + back)
        .add(lineChart.mkWg(chart, data))))
  ;

};

