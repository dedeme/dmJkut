// Copyright 22-Jul-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Summary page.

import "libdm/menu";
import "cts";
import "data/flea";
import "fns";
import "i18n";

Q = ui.q;
II = i18n.tlt;

/// \<domo> -> ()
mk = async \wg -> {
  , :dic Summary  // {{[flea(Js).]}.}::
                  // {date -> {model -> best}}, where
                  // best is a JSONized flea.
  : await client.send({
    prg: cts.appName,
    source: "SummaryPg",
    rq: "idata"
  });

  :arr Dates = Summary.keys();
  Dates.sort(\d1, d2 -> return d1 > d2;);

  size = Dates.size();
  iV = [0];
  Trs = []; // [<domo>...]
  while (true) {
    if (iV! == size) break;
    tr = Q("tr");
    for (i = 0:4) {
      if (iV! == size) {
        for (j = i:4) tr.add(Q("td"));
        break;
      }
      d = Dates[iV!];
      tr
        .add(Q("td")
          .style("vertical-align:top")
          .add(mkDay(d, Summary[d])));
      Trs.push(tr);
      iV! += 1;
    }
  }

  wg
    .removeAll()
    .add(Q("table")
      .att("align", "center")
      .adds(Trs))
  ;

};

// Makes a date table.
//    date   : Date in format YYYYMMDD
//    summary: {model -> best} where
//             is a JSONized flea.
// \s, {[flea(JS).]} -> <domo>
mkDay = \date, :dic Summary -> {
  Rows = []; // Best rows. [[s, n, n, n]...] :: [[model, assets, profits, points]...]

  for (mdId, Fjs = Summary) {
    :flea fl = flea.fromJs(Fjs);
    Rows.push([mdId, fl.assets, fl.profits, fl.points, fl.Params, fl.sales]);
  }

  return Q("table")
    .klass("border")
    .add(Q("tr")
      .add(Q("td")
        .att("colspan", 4)
        .klass("borderWhite")
        .style("text-align:center;background:#c9c9c9;")
        .text(time.toIso(time.fromStr(date)!))))
    .adds(mkResults(Rows))
  ;
};

// Makes a results row.
//    Rs: Array of model identifier and results of assets, profits and points,
// \[[s, n, n, n, [n, n], n]...] -> <domo>
mkResults = \:arr Rs -> {
  Rs.sort(\R1, R2 -> return R1[3] > R2[3];);
  Trs = []; // [<domo>...]
  for (R = Rs) {
    Trs.push(Q("tr")
      .add(Q("td")
        .klass("link")
        .style("text-align:right;background:#fafafa;cursor:pointer")
        .att(
            "title",
            II("Params") + ": [" + R[4] + "]\n" +
            II("Sales") + " : " + R[5]
          )
        .on("click", \ev -> window.location="?rankings&" + R[0];)
        .text(R[0]))
      .add(fns.mkTdN(R[1], 2))
      .add(fns.mkTdN(R[2], 4))
      .add(fns.mkTdN(R[3], 0))
    );
  }
  return Trs;
};
