// Copyright 25-Apr-2024 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Accounts page.

import "data/acc";
import "data/accValue";
import "data/diaryEntry";
import "cts";
import "fns";
import "i18n";

Q = ui.q;
II = i18n.tlt;

/// \<domo>,s, s -> ()
mk = \wg, account, ix -> {
  // \ -> s
  mostUsed = \ -> {
    As = acc.mostUsedSubaccounts(false);
    return !As
      ? ""
      : As[0][0] == cts.cash
        ? As[1][0]
        : As[0][0]
    ;
  };

  ac = account == "" | acc.descriptionOf(account) == ""
    ? account == "*" ? "" : mostUsed()
    : account
  ;

  :arr CashEntryIxs = acc.usedAccs(ac);
  lastIx = !CashEntryIxs ? -1 : CashEntryIxs.peek();
  ixn = math.isDigits(ix) ? math.toInt(math.fromStr(ix)!) : lastIx;

  ixFirstRowV = [ixn > lastIx ? lastIx : ixn];

  listDiv = Q("div");

  listV = [[]];

  // Control -------------------------------------------------------------------

  // \i -> i
  getEntriesIndex = \ix -> {
    size = CashEntryIxs.size();
    for (i = 0:size) if (CashEntryIxs[i] == ix) return i;
    return size - 1;
  };

  // \<event> -> ()
  upClick = \e -> {
    i = getEntriesIndex(ixFirstRowV!);
    if (ixFirstRowV! > -1 & i < CashEntryIxs.size() - 1) {
      ixFirstRowV! = CashEntryIxs[i + 1];
      listDiv.removeAll().add(listV!());
    }
  };

  // \<event> -> ()
  downClick = \e -> {
    i = getEntriesIndex(ixFirstRowV!);
    if (i > 0) {
      ixFirstRowV! = CashEntryIxs[i - 1];
      listDiv.removeAll().add(listV!());
    }
  };

  // \<event> -> ()
  dupClick = \e -> {
    i = getEntriesIndex(ixFirstRowV!) + math.toInt(cts.tableLen / 2);
    if(ixFirstRowV! > -1) {
      ixFirstRowV! = i < CashEntryIxs.size()
        ? CashEntryIxs[i]
        : CashEntryIxs.peek()
      ;
      listDiv.removeAll().add(listV!());
    }
  };

  // \<event> -> ()
  ddownClick = \e -> {
    i = getEntriesIndex(ixFirstRowV!) - math.toInt(cts.tableLen / 2);
    if (i > 0) {
      ixFirstRowV! = CashEntryIxs[i];
      listDiv.removeAll().add(listV!());
    }
  };

  // \<event> -> ()
  topClick = \e -> {
    if (ixFirstRowV! > -1) {
      ixFirstRowV! = CashEntryIxs.peek();
      listDiv.removeAll().add(listV!());
    }
  };

  // \<event> -> ()
  bottomClick = \e -> {
    if (ixFirstRowV! > -1) {
      size = CashEntryIxs.size();
      i0 = [cts.tableLen - 1];
      i = i0 >= size ? size - 1 : i0;
      ixFirstRowV! = CashEntryIxs[i];
      listDiv.removeAll().add(listV!());
    }
  };

  // \i -> ()
  monthClick = \m -> {
    if (ixFirstRowV! > -1) {
      diary = acc.diary();
      size = CashEntryIxs.size();
      iV = [0];
      while (true) {
        :diaryEntry e = diary[CashEntryIxs[iV!]];
        iV! += 1;
        if (time.month(e.date) >= m | iV! == size) break;
      }
      ixFirstRowV! = CashEntryIxs[iV! - 1];
      listDiv.removeAll().add(listV!());
    }
  };

  // \i -> ()
  goToDiary = \diaryIx -> window.location.assign(
      "?diary&" + account + "&" + diaryIx
    );;


  // View ----------------------------------------------------------------------

  // \ -> <domo>
  listV! = \ -> {
    sumV = [0];
    :arr Entries = CashEntryIxs.map(\i -> {
      :diaryEntry e = acc.diary()[i];
      amV = [0];
      for (a, v = e.debits) if (str.starts(a, ac)) amV! += v;
      for (a, v = e.credits) if (str.starts(a, ac)) amV! -= v;
      sumV! += amV!;
      return {
          ix: i,
          date: e.date,
          desc: e.description,
          amm: amV!,
          sum: sumV!
        };
    });

    // \ -> <domo>
    td = \ -> return Q("td").klass("frame").style("vertical-align:top;");;
    // \ -> <domo>
    tdr = \ -> return td().setStyle("text-align", "right");;
    // \ -> <domo>
    tdl = \ -> return td().setStyle("text-align", "left");;

    cutV = [0];
    for (ix = 0:Entries.size()) {
      :: E = Entries[ix];
      if (E.ix >= ixFirstRowV!) {
        cutV! = ix + 1;
        break;
      }
    }
    return Q("table")
      .att("align", "center")
      .adds(arr.map(
        arr.reverse(arr.drop(arr.take(Entries, cutV!), cutV! - cts.tableLen)),
        \E -> return Q("tr")
            .add(tdr()
              .html(""+ (E.ix + 1)))
            .add(td()
              .html(time.format(E.date, "%D/%M")))
            .add(tdl()
              .add(ui.link(\ev -> goToDiary(E.ix);)
                .klass("link")
                .html(E.desc)))
            .add(tdr()
              .html(E.amm > 0 ? math.toIso(E.amm, 2) : ""))
            .add(tdr()
              .html(E.amm < 0 ? math.toIso(-E.amm, 2) : ""))
            .add(tdr()
              .html(math.toIso(E.sum, 2)))
          ;
        )
      );
  };

  // \ -> <domo>
  left = \ -> {
    return Q("td")
      .klass("frame")
      .style("width:250px;vertical-align:top;white-space:nowrap")
      .add(Q("ul")
        .style("list-style:none;padding-left:0px;")
        .adds(iter.map([1:str.len(ac) + 1], \lg -> return Q("li")
          .html("<a href='#' onclick='return false;'>" +
            fns.cutRight(acc.descriptionOf(ac[:lg]), cts.helpLen) + "</a>")
          .add(Q("ul")
            .att("id", "hlist")
            .style("list-style:none;padding-left:10px;")
            .adds(\ -> {
                :arr A = dic.toArr(acc.subOf(ac[:lg - 1]));
                A.sort(\Kv1, Kv2 -> return Kv1[0] < Kv2[0];);
                return A.map(\Kv -> return Q("li")
                  .add(ui.link(\e -> window.location.assign("?accs&" + Kv[0]);)
                    .klass("link")
                    .att("title", Kv[0])
                    .html(fns.cutRight(Kv[1][accValue.description], cts.helpLen)))
                ;);
              }()));))
        .add(Q("li")
          .add(Q("hr")))
        .adds(str.len(ac) == 5
          ? []
          : \ -> {
              :arr A = dic.toArr(acc.sub(ac));
              A.sort(\Kv1, Kv2 -> return Kv1[0] < Kv2[0];);
              return A.map(\Kv -> return Q("li")
                .add(ui.link(\e -> window.location.assign("?accs&" + Kv[0]);)
                  .klass("link")
                  .att("title", acc.accFormat(Kv[0]))
                  .html(fns.cutRight(Kv[1][accValue.description], cts.helpLen)))
              ;);
            }()))
    ;
  };

  // \ -> <domo>
  right = \ -> {
    // \ -> <domo>
    mkSubmenu = \ -> {
      // \ -> <domo>
      separator = \ -> return Q("span").text("|");;
      // \s, s -> <domo>
      entry = \tx, lk ->
        return ui.link(\e -> window.location.assign("?accs&" + lk);)
          .klass("link")
          .text(" " + tx + " ")
        ;;

      Es = [separator(), entry("*", "*"), separator()];
      // \s, s -> ()
      add = \tx, lk -> {
        Es.push(entry(tx, lk));
        Es.push(separator());
      };
      acLen = str.len(ac);
      if (acLen > 0) add(ac[0], ac[0]);
      if (acLen > 1) add(ac[1], ac[:2]);
      if (acLen > 2) add(ac[2], ac[:3]);
      if (acLen > 3) add(ac[3:], ac);
      return Q("div")
        .add(Q("p").adds(Es))
        .add(Q("p")
          .add(Q("span")
            .klass("frame")
            .html(ac == "" ? II("All") : acc.descriptionOf(ac))))
      ;
    };

    r = Q("td")
      .style("text-align:center;vertical-align:top;")
      .add(Q("div")
        .klass("head")
        .text(II("Accs")))
      .add(mkSubmenu())
      .add(Q("table")
        .att("align", "center")
        .add(Q("tr")
          .add(Q("td"))))
      .add(Q("hr"))
      .add(Q("table")
        .att("align", "center")
        .add(Q("tr")
          .add(Q("td").att("colspan", 3))
          .add(Q("td").klass("diary").add(ui.link(upClick)
            .setStyle("font-family", "monospace").html("&nbsp;\u2191&nbsp;")))
          .add(Q("td").klass("diary").add(ui.link(downClick)
            .setStyle("font-family", "monospace").html("&nbsp;\u2193&nbsp;")))
          .add(Q("td").klass("diary").add(ui.link(dupClick)
            .setStyle("font-family", "monospace").html("\u2191\u2191")))
          .add(Q("td").klass("diary").add(ui.link(ddownClick)
            .setStyle("font-family", "monospace").html("\u2193\u2193")))
          .add(Q("td").klass("diary").add(ui.link(topClick)
            .setStyle("font-family", "monospace").html("&nbsp;\u2912&nbsp;")))
          .add(Q("td").klass("diary").add(ui.link(bottomClick)
            .setStyle("font-family", "monospace").html("&nbsp;\u2913&nbsp;")))
          .add(Q("td").att("colspan", 3)))
        .add(Q("tr")
          .adds(iter.map([1:13], \i -> return Q("td")
              .klass("diary")
              .add(ui.link(\e -> monthClick(i);)
                .html("&nbsp;" + i + "&nbsp;"))
            ;))))
      .add(Q("hr"))
      .add(listDiv)
    ;

    listDiv.add(listV!());
    return r;
  };

  wg
    .removeAll()
    .add(Q("table")
      .klass("main")
      .add(Q("tr")
        .add(left())
        .add(right())))
  ;
};
