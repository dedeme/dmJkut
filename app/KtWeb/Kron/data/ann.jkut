// Copyright 23-May-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Entry of annotations table.

/// Annotation type
typePERIODIC, typeFIX, typeMANUAL=;


/// Creates a new a<Ann>
/// id  : Annotation identifier.
/// type: Type of annotation.
/// data: JSON array with the following fields:
///       if type == PERIODIC: 0 -> Float (time in seconds),
///                            1 -> Array<Int (Weekday 0[Monday]-6)>
///       if type == FIX: 0 -> Float (time in seconds)
///       if type == MANUAL: No fields.
/// text: Command to execute.
/// \n,n,s,s -> <ann>
mk : id, type, data, text;

/// \<ann> -> [*.]
toJs = \a -> return [
    a[id],
    a[type],
    js.r(a[data]),
    a[text]
  ];;

/// \[*.] -> <ann>
fromJs = \A -> return [
    A[id],
    A[type],
    js.w(A[data]),
    A[text]
  ];;

/// Returns [time, weekday] if type is Ann_PERIODIC.
/// \<ann> -> [n...]
days = \a -> {
  if (a[type] != typePERIODIC)
    throw("Expected type typePERIODIC, but it is " + a[data]);
  return js.r(a[data])[1];
};

///  Returns 'time' if type is Ann_FIX or Ann_PERIODIC.
/// \<ann> -> n
date = \a -> {
  if (a[type] == typeMANUAL)
    throw("type must not be Ann_MANUAL");
  if (a[type] == typeFIX)
    return js.r(a[data]) * 1000;
  return js.r(a[data])[0] * 1000;
};
