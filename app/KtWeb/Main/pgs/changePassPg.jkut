// Copyright 13-Mar-2024 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Change password page.

import "libdm/captcha";
import "cts";
import "i18n";

Q = ui.q;
II = i18n.tlt;

/// Constructor.
///   wg : Container widget
///   fn : Callback after cancellation or a valid acceptation.
/// \<domo>, \->() -> ()
mk = \wg, fn -> {
  app = cts.appName;
  // \ -> <captcha>
  mkCaptcha = \ ->
    return captcha.mk(app + "__captcha", 3, "#f0f0f0", "#c0c0c0");;

  oldPass = ui.pass("newPass").att("id", "autofocus");
  newPass = ui.pass("newPass2").att("id", "newPass");
  newPass2 = ui.pass("acceptBt").att("id", "newPass2");

  captchaV = [mkCaptcha()];
  failedV = [false];

  showV = [[]];

  // Control -------------------------------------------------------------------

  // \<event> -> ()
  cancel = \ev -> fn();;

  // \<event> -> ()
  accept = async \ev -> {
    opass = str.trim(oldPass.getValue());
    npass = str.trim(newPass.getValue());
    npass2 = str.trim(newPass2.getValue());

    if (opass == "") {
    ui.alert(II("Current password is missing"));
      showV!();
      return;
    }
    if (npass == "") {
      ui.alert(II("New password is missing"));
      return;
    }
    if (npass2 == "") {
      ui.alert(II("Confirm password is missing"));
      return;
    }
    if (npass != npass2) {
      ui.alert(II("New password and confirm password do not match"));
      return;
    }

    if (captchaV!.isUpLimit() & !captchaV!.check()) {
      ui.alert(II("Grey squares checks are wrong"));
      captchaV! = mkCaptcha();
      showV!();
      return;
    }

    , ok : await client.send({
      prg: "Main",
      source: "ChangePass",
      rq: "changePass",
      user: client.userName(),
      old: client.crypPass(opass),
      "new": client.crypPass(npass)
    });

    if (ok) {
      captchaV!.reset();
      ui.alert(II("Password successfully changed"));
      fn();
    } else {
      failedV! = true;
      captchaV!.increment();
      captchaV! = mkCaptcha();
      showV!();
    }
  };

  // View ----------------------------------------------------------------------

  showV! = \ -> {
    oldPass.value("");
    newPass.value("");
    newPass2.value("");

    cancelBt = Q("button")
      .on("click", cancel)
      .text(II("Cancel"))
    ;
    acceptBt = Q("button")
      .att("id", "acceptBt")
      .on("click", accept)
      .text(II("Accept"))
    ;

    Rows = [
      Q("tr")
        .add(Q("td")
          .style("padding: 10px 0px 0px 10px;text-align:right;")
          .html(II("Current password")))
        .add(Q("td")
          .style("padding: 10px 10px 0px 10px;")
          .add(oldPass)),
      Q("tr")
        .add(Q("td")
          .style("padding: 5px 0px 0px 10px;text-align:right;")
          .html(II("New password")))
        .add(Q("td")
          .style("padding: 5px 10px 0px 10px;")
          .add(newPass)),
      Q("tr")
        .add(Q("td")
          .style("padding: 5px 0px 10px 10px;text-align:right;")
          .html(II("New password")))
        .add(Q("td")
          .style("padding: 5px 10px 10px 10px;")
          .add(newPass2)),
      Q("tr")
        .add(Q("td")
          .att("colspan", 2)
          .style(
            "border-top:1px solid #c9c9c9;" +
            "padding: 10px 10px 10px;text-align:right;")
          .add(Q("span")
            .add(cancelBt))
          .add(Q("span")
            .text("  "))
          .add(Q("span")
            .add(acceptBt)))
    ];

    if (failedV!) {
      Rows.push(
        Q("tr")
          .add(Q("td")
            .att("colspan", 2)
            .style("border-top:1px solid #c9c9c9;" +
                   "adding: 10px 10px 10px;text-align:right;")
            .add(Q("table")
              .att("align", "center")
              .style(
                "background-color: rgb(250, 250, 250);" +
                "border: 1px solid rgb(110,130,150);" +
                "font-family: sans;font-size: 14px;" +
                "padding: 4px;border-radius: 4px;")
              .add(Q("tr")
                .add(Q("td")
                  .html(II("Wrong password"))))))
      );
    }

    if (captchaV!.isUpLimit()) {
      Rows.push(
        Q("tr")
          .add(Q("td")
            .att("colspan", 2)
            .att("align", "center")
            .add(captchaV!.wg))
      );
      Rows.push(
        Q("tr")
          .add(Q("td")
            .att("colspan", 2)
            .style("padding: 5px 0px 5px 10px;text-align:center;")
            .html(II("Check gray squares")))
      );
    }

    wg
      .removeAll()
      .add(Q("div")
        .klass("head")
        .html("&nbsp;<br>" + app + "&nbsp;"))
      .add(Q("table")
        .att("align", "center")
        .style(
          "background-color: #f8f8f8;" +
          "border-collapse: collapse;" +
          "padding: 10px;" +
          "border: 1px solid rgb(110,130,150);")
        .add(Q("tr")
          .add(Q("td")
            .att("colspan", 2)
            .style(
              "background-color:#e8e8e8;" +
              "border-bottom:1px solid #c9c9c9;" +
              "padding: 10px;" +
              "color:#505050;"
            )
            .html("<big><big><b>" + II("Login") + "</big></big></b>")))
        .adds(Rows));

    oldPass.e.focus();
  };

  showV!();
};

