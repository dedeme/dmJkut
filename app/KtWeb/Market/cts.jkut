// Copyright 07-Apr-2024 ºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Constants.

import "i18n";

Q = ui.q;
II = i18n.tlt;

/// Application name.
/// s
appName = "Market";
/// Application version.
/// s
version = "2024.04";
/// Page foot.
/// <domo>
foot = Q("table")
  .klass("main")
  .add(Q("tr")
    .add(Q("td")
      .add(Q("hr"))))
  .add(Q("tr")
    .add(Q("td")
      .style("text-align: right;color:#808080;font-size:x-small;")
      .html(str.fmt("- © ºDeme. %v (%v) -", [appName, version]))))
;

/// me nick.
/// s
meNick = "<ME>";
/// Ibex nick
/// s
ibexNick = "<IBEX>";
/// Euro index nick.
/// s
euroNick = "<EURO>";

/// Limit over which a company has enough volume to trade.
/// n
trading = 1_500_000;
/// Ammount to make a buy.
/// Used in tradingPg and balancePg and to calculate withdrawals, and in dailPg
/// to calculate references.
/// n
bet = 15000.0;
/// Minumum to bet. (Used in blancePg and to calculate withdrawals)
/// n
minToBet = 16000.0;
/// Investor initial capital. (Used in balancePg to calculate withdrawals)
/// n
initialCapital = 300000.0;
/// Server states.
/// [n.]
serverStopped, serverActive, serverSelected =;
/// Number of quotes for accounting charts.
/// n
accountingQuotes = 250;

/// Standar messsage for server fails.
/// s
okMsg = II("Operation successfully done.");
/// Standar messsage for server fails.
/// s
failMsg = II("Operation failed.\nSee log.");

/// ToBuy references colors (one by investor)
/// [s.]
toBuyColors = [
  "rgba(160, 0, 0)",
  "rgba(224, 160, 0)",
  "rgba(240, 224, 0)"
];
/// ToSell references colors (one by investor)
/// [s.]
toSellColors = [
  "rgba(0, 0, 160)",
  "rgba(0, 160, 224)",
  "rgba(0, 160, 0)"
];

/// Activiy states
/// {n.}
active, sleeping :;

/// Order types in daily charts.
/// [n.]
chartOrderNick, chartOrderDay, chartOrderSignal =;

/// Order nicks in daily list.
/// [n.]
lTick, lNick, lDayPerc, lDay, lPf, lPfPerc, lRef =;
