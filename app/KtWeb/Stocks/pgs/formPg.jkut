// Copyright 26-Apr-2024 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Company form page.

import "libdm/menu";
import "data/all";
import "data/report";
import "data/formRow";
import "cts";
import "i18n";

Q = ui.q;
II = i18n.tlt;

key = "Stocks_forms_key";
bk0 = "#c0c0c0";
bk1 = "#f9f9ff";


/// \<domo> -> ()
mk = async \wg -> {
  All = await all.request();
  show(wg, cts.withoutFees, All, [all.lastYearId(All)]);
};

// \domo, i, {Year.}, [n] -> ()
show = \wg, isel, :all All, yearOp -> {
  sel = isel == cts.withoutFees
    ? "without"
    : "with"
  ;

  Ylopts = [];
  Ylopts.push(menu.toption("all", II("All"), \ -> show(wg, isel, All, []);));
  for (myear = All.yearIds()) {
    Ylopts.push(menu.separator());
    Ylopts.push(menu.toption(
      myear, myear, \ -> show(wg, isel, All, [myear]);
    ));
  }
  selYear = !yearOp ? "all" : "" + yearOp!;
  ymenuWg = menu.mk(Ylopts, [], selYear);

  Lopts = [
    menu.toption("with", II("With Fees"),
      \ -> show(wg, cts.withFees, All, yearOp);),
    menu.separator(),
    menu.toption("without", II("Without Fees"),
      \ -> show(wg, cts.withoutFees, All, yearOp);)
  ];
  menuWg = menu.mk(Lopts, [], sel);

  :arr Nicks = All.nicks(yearOp);
  nickSelOp = storage.get(key);
  nickSel = !!nickSelOp & Nicks.any(\n -> return n == nickSelOp!;)
    ? nickSelOp!
    : !Nicks
      ? ""
      : Nicks[0]
  ;

  body = Q("div");
  showNicks(body, isel, Nicks, nickSel, All, yearOp);

  wg
    .removeAll()
    .add(ymenuWg)
    .add(menuWg)
    .add(body)
  ;
};

// \<domo>, n, [s], s, {Year.}, [n] -> ()
showNicks = \wg, isel, Nicks, nickSel, :all All, yearOp -> {
  if (!Nicks) {
    wg
      .removeAll()
      .add(Q("table")
        .att("align", "center")
        .add(Q("tr")
          .add(Q("td")
            .klass("frame")
            .text(II("Without data")))))
    ;
    return;
  }

  storage.put(key, nickSel);
  Lopts = [];
  firstV = [true];
  eOp = []; // [<menuEntry]
  for (nk = Nicks) {
    if (firstV!) firstV! = false;
    else Lopts.push(menu.separator());

    e = menu.toption(nk, nk, \ -> showNicks(wg, isel, Nicks, nk, All, yearOp););
    if (nk == nickSel) arr.push(eOp, e);
    arr.push(Lopts, e);
  }
  menuWg = menu.mk(Lopts, [], nickSel);
  if (!!eOp) eOp!.wg.klass("frameMenu").style("");

  :arr Entries = All.form(isel, nickSel, yearOp);
  LeOp = !Entries ? [] : [Entries.peek()];

  table = Q("table")
    .klass("border")
    .att("align", "center")
    .add(Q("tr")
      .add(Q("td")
        .klass("header")
        .text(II("Date")))
      .add(Q("td").text(" "))
      .add(Q("td")
        .klass("header")
        .text(II("Stocks")))
      .add(Q("td")
        .klass("header")
        .text(II("Price")))
      .add(Q("td")
        .klass("header")
        .text(II("Total")))
      .add(Q("td").text(" "))
      .add(Q("td")
        .klass("header")
        .text(II("Stocks")))
      .add(Q("td")
        .klass("header")
        .text(II("Price")))
      .add(Q("td")
        .klass("header")
        .text(II("Total")))
      .add(Q("td").text(" "))
      .add(Q("td")
        .klass("header")
        .text(II("Stocks")))
      .add(Q("td")
        .klass("header")
        .text(II("Price")))
      .add(Q("td")
        .klass("header")
        .text(II("Total")))
      .add(Q("td").text(" "))
      .add(Q("td").text(" "))
      .add(Q("td")
        .klass("header")
        .text(II("Income")))
      .add(Q("td")
        .klass("header")
        .text(II("Profits")))
      .add(Q("td")
        .klass("header")
        .text(II("Fees"))))
    .adds(arr.map(Entries, \e -> return mkRow(e);))
    .add(Q("tr")
      .add(Q("td")
        .att("colspan", "16"))
      .add(Q("td")
        .att("colspan", "2")
        .add(Q("hr"))))
    .add(!LeOp
      ? Q("tr")
          .add(Q("td")
            .att("colspan", "17")
            .style("text-align: center")
            .text(II("Without Data")))
      : Q("tr")
        .add(Q("td")
          .att("colspan", "14")
          .style("text-align: right")
          .text(II("Sum") + ":"))
        .add(Q("td").text(" "))
        .add(Q("td").text(" "))
        .add(Q("td")
          .klass("number")
          .style("background:" + bk1)
          .text(math.toIso(LeOp![formRow.ttProfits], 2)))
        .add(Q("td")
          .klass("number")
          .style("background:" + (LeOp![formRow.ttFees] > 0 ? bk1 : bk0))
          .text(LeOp![formRow.ttFees] > 0
              ? math.toIso(LeOp![formRow.ttFees], 2) : ""
            ))
      )
  ;

  wg
    .removeAll()
    .add(menuWg)
    .add(Q("div")
      .klass("head")
      .text(II("Form")))
    .add(table)
  ;
};

// \<formRow> -> <domo>
mkRow = \:formRow e -> {
  bkb = "#fff0e0";
  bks = "#e0f0ff";
  bkt = "#f0f0f0";
  return Q("tr")
    .add(Q("td")
      .klass("number2")
      .text(e.date))
    .add(Q("td"))
    .add(Q("td")
      .klass("number2")
      .style("background:" + bkb)
      .text(e.bs == 0 ? "" : math.toIso(e.bs, 0)))
    .add(Q("td")
      .klass("number")
      .style("background:" + bkb)
      .text(e.bs == 0 ? "" : math.toIso(e.bp, 4)))
    .add(Q("td")
      .klass("number")
      .style("background:" + bkb)
      .text(e.bs == 0 ? "" : math.toIso(e.bt, 2)))
    .add(Q("td"))
    .add(Q("td")
      .klass("number2")
      .style("background:" + bks)
      .text(e.ss == 0 ? "" : math.toIso(e.ss, 0)))
    .add(Q("td")
      .klass("number")
      .style("background:" + bks)
      .text(e.ss == 0 ? "" : math.toIso(e.sp, 4)))
    .add(Q("td")
      .klass("number")
      .style("background:" + bks)
      .text(e.ss == 0 ? "" : math.toIso(e.st, 2)))
    .add(Q("td"))
    .add(Q("td")
      .klass("number2")
      .style("background:" + bkt)
      .text(math.toIso(e.ts, 0)))
    .add(Q("td")
      .klass("number")
      .style("background:" + bkt)
      .text(e.ts == 0 ? "" : math.toIso(e.tp, 4)))
    .add(Q("td")
      .klass("number")
      .style("background:" + bkt)
      .text(math.toIso(e.tt, 2)))
    .add(Q("td"))
    .add(Q("td"))
    .add(Q("td")
      .klass("number")
      .style("background:" + (!e.profits ? bk0 : bk1))
      .text(!e.profits ? "" : math.toIso(e.profits! + e.st, 2)))
    .add(Q("td")
      .klass("number")
      .style("background:" + (!e.profits ? bk0 : bk1))
      .text(!e.profits ? "" : math.toIso(e.profits!, 2)))
    .add(Q("td")
      .klass("number")
      .style("background:" + (!e.fees ? bk0 : bk1))
      .text(!e.fees ? "" : math.toIso(e.fees!, 2)))
  ;
};
