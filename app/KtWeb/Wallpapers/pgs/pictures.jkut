// Copyright 26-Sep-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Pictures page.

import "data/cts";
import "data/pict";
import "wgs/clocks";
import "wgs/info";
import "wgs/pictTime";
import "media";
import "i18n";

Q = ui.q;
II = i18n.tlt;

/// \<domo>, (\->()) -> ()
mk = async \wg, reload -> {
  Rp = await client.send({
    prg: cts.appName,
    source: "Pictures",
    rq: "idata"
  });

  group = Rp.group;
  groupV = [group];
  Pict = pict.fromJs(Rp.pict);
  PictV = [Pict];

  tm = timer.mk(media.picturesTime);

  Visuals = media.visuals();

  img = Visuals.img
    .att("src", "img/fondosEscritorio/" + group + "/" + Pict.id)
  ;

  Info = info.mk(-350, info.pictureWg(group, Pict));
  PictTime = pictTime.mk(-350);

  Clocks = clocks.mk(Visuals.tm);

  // Control -------------------------------------------------------------------

  // \<event> -> ()
  goBack = \e -> {
    timer.stop(tm);
    reload();
  };

  // \<KeyboardEvent> -> ()
  keyDown = \ev -> {
    if (ev.key == "ArrowUp") {
      goBack(ev);
      ev.preventDefault();
      return;
    }

    if (ev.key == "ArrowDown") {
      Info.changeOpacity();
      ev.preventDefault();
      return;
    }

    if (ev.key == "ArrowLeft") {
      Clocks.clockChangeOpacity();
      ev.preventDefault();
      return;
    }

    if (ev.key == "ArrowRight") {
      Clocks.chronChangeOpacity();
      ev.preventDefault();
      return;
    }

    if (ev.key >= "1" & ev.key <= "6") {
      PictTime.show(math.fromStr(ev.key)!);
      ev.preventDefault();
      return;
    }
  };

  // View ----------------------------------------------------------------------


  div = Visuals.div
    .setStyle(
      "background-image",
      "url('img/fondosEscritorio/" + group + "/" + Pict.id + "')"
    )
    .add(Info.wg)
    .add(PictTime.wg)
    .on("click", goBack)
  ;

  Q("@body")
    .on("keydown", keyDown);

  wg
    .removeAll()
    .add(div)
  ;

  div.e.requestFullscreen();
  timer.run (tm, async \ -> {
    Rp = await client.send({
      prg: cts.appName,
      source: "Pictures",
      rq: "idata"
    });
    newGroup = Rp.group;
    NewPict = pict.fromJs(Rp.pict);
    if (newGroup != groupV! | NewPict.id != PictV!.id) {
      groupV! = newGroup;
      PictV! = NewPict;
      media.changePict(div, img, Info, newGroup, NewPict);
    }
  });

};

