// Copyright 29-May-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Percentages page

import "libdm/lineChart";
import "data/cts";
import "data/profitsEntry";
import "i18n";

Q = ui.q;
II = i18n.tlt;

/// \<domo> -> ()
mk = async \wg -> {
  Rp = await client.send({
    prg: cts.appName,
    module: "KtMarket",
    source: "ProfitsPg",
    rq: "idata"
  });
  invs = Rp.investors; // n
  Profits = arr.map(Rp.profits, profitsEntry.fromJs);

  if (!Profits) {
    arr.push(Profits, [new ProfitsEntry(
      time.toStr(time.mkDate(1, 1, time.year(time.now()))), [0, 0, 0]
    )]);
  }
  if (arr.size(Profits) == 1) arr.push(Profits, Profits[0]);

  // View ----------------------------------------------------------------------

  // \ -> <domo>
  caption = \ ->
    return Q("table")
      .klass("frame")
      .att("align", "center")
      .adds(arr.fromIter(iter.map([0:invs], \i ->
        return Q("tr")
          .add(Q("td")
            .style("width:30px")
            .add(ui.led(cts.ToSellColors[i], 6)))
          .add(Q("td")
            .style("vertical-align: middle")
            .text(II("Investor") + "-" + i))
        ;)))
    ;;

  if (arr.size(Profits[0].Profits) != invs)
    throw ("Investor number is not " + invs);

  // [s...]
  Labels = [];
  // [[[n]|[]...]...]
  Sets = [];
  for (i = [0:invs]) arr.push(Sets, []);
  for (E = Profits) {
    arr.push(Labels, E.date[6:] + "/" + E.date[4:6]);
    Pfs = E.Profits;
    for (i = [0:invs]) arr.push(Sets[i], [Pfs[i]]);
  }
  SetAtts = [
    lineChart.mkLineExample(),
    lineChart.mkLineExample(),
    lineChart.mkLineExample()
  ];
  for (i = [0:invs]) SetAtts[i].color = cts.ToSellColors[i];
  Chart = lineChart.mkExample();
  Chart.ExArea.width = 600;
  Chart.ExArea.height = 400;
  Chart.InPadding = lineChart.mkPadding(25, 25, 30, 100);

  Data = lineChart.mkData(Labels, Sets, SetAtts);
  lenGroup = math.toInt(arr.size(Labels) / 10) + 1;
  Data.drawLabel = \l, i -> return i > 0 & i % lenGroup == 0;;
  Data.drawGrid = \l, i ->
    return i > 0 & i % lenGroup == 0 & i < arr.size(Labels) - 1;;

  wg
    .removeAll()
      .removeAll()
      .add(Q("table")
        .att("align", "center")
        .add(Q("tr")
          .add(Q("td")
            .add(caption())))
        .add(Q("tr")
          .add(Q("td")
            .add(lineChart.mkWg(Chart, Data)))))
  ;
};
