// Copyright 06-Aug-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Diary annotation.

import "i18n";

II = i18n.tlt;

/// Type ex

/// Constructor
///   id: Identifier.
///   isSell: 'true' if annotation is a sale. Otherwise (existences or buy) is false.
///   date: Date of annotation.
///   inv: Identifier of investor (0, 1, 2...)
///   nick: Company nick
///   stocks: Annotation stocks. Its value must be > 0.
///   price: Price of each stock. Its value must be >= 0.
///   cash: Total value of operation. Its value must be >= 0 and include fees.
/// \n, b, n, n, s, n, n, n -> d<ann>
mk = \id, isSell, date, inv, nick, stocks, price, cash ->
  return {id, isSell, date, inv, nick, stocks, price, cash};;

/// Set every value of Old with New.
/// \<ann>, <ann> -> ()
update = \Old, New -> {
  Old.id = New.id;
  Old.isSell = New.isSell;
  Old.date = New.date;
  Old.inv = New.inv;
  Old.nick = New.nick;
  Old.stocks = New.stocks;
  Old.price = New.price;
  Old.cash = New.cash;
};

/// Returns a representation of 'A'.
/// \<ann> -> s
toStr = \A -> return
  "| " +
  (A.isSell
      ? II("S")
      : II("B")
    ) + " | " +
  time.toIso(A.date) + " | " +
  A.inv + " | " +
  A.nick + " | " +
  math.toIso(A.stocks, 0) + " | " +
  math.toIso(A.price, 4) + " | " +
  math.toIso(A.cash, 2) +  " |"
;;

/// \<ann> -> JS
toJs = \A -> return [
    A.id,
    A.isSell,
    time.toStr(A.date),
    A.inv,
    A.nick,
    A.stocks,
    A.price,
    A.cash
  ];;

/// \JS -> <ann>
fromJs = \A -> return mk(
    A[0],
    A[1],
    time.fromStr(A[2])!,
    A[3],
    A[4],
    A[5],
    A[6],
    A[7]
  );;
