// Copyright 10-Aug-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Company form page.

import "libdm/menu";
import "data/all";
import "data/report";
import "data/cts";
import "i18n";

Q = ui.q;
II = i18n.tlt;

key = "Stocks_forms_key";
bk0 = "#c0c0c0";
bk1 = "#f9f9ff";


/// \<domo>, [n] -> ()
mk = async \wg, yearOp -> {
  All = await all.request();
  show(wg, report.all, All, yearOp);
};

// \domo, i, {Year.}, [n] -> ()
show = \wg, isel, All, yearOp -> {
  sel = isel == report.all
    ? "all"
    : isel == report.withFees
      ? "with"
      : "Inv-" + isel
  ;

  Ylopts = [];
  arr.push(Ylopts, menu.toption(
      "all", II("All"), \ -> show(wg, isel, All, []);
  ));
  for (myear = all.yearIds(All)) {
    arr.push(Ylopts, menu.separator());
    arr.push(Ylopts, menu.toption(
      myear, myear, \ -> show(wg, isel, All, [myear]);
    ));
  }
  selYear = yearOp ? "" + yearOp! : "all";
  ymenuWg = menu.mk(Ylopts, [], selYear, false);

  Lopts = [menu.toption("all", II("All"), \ -> show(wg, -1, All, yearOp);)];
  for (i = 0:cts.investors) {
    name = "Inv-" + i;
    arr.push(Lopts, menu.separator());
    arr.push(Lopts, menu.toption(name, name, \ -> show(wg, i, All, yearOp);));
  }
  Ropts = [
    menu.toption("with", II("With Fees"), \ -> show(wg, -2, All, yearOp);)
  ];
  menuWg = menu.mk(Lopts, Ropts, sel, false);

  Nicks = all.nicks(All, isel, yearOp);
  nickSelOp = storage.get(key);
  nickSel = nickSelOp & arr.any(Nicks, \n -> return n == nickSelOp!;)
    ? nickSelOp!
    : Nicks
      ? Nicks[0]
      : ""
  ;

  body = Q("div");
  showNicks(body, isel, Nicks, nickSel, All, yearOp);

  wg
    .removeAll()
    .add(ymenuWg)
    .add(menuWg)
    .add(body)
  ;
};

// \<domo>, n, [s], s, {Year.}, [n] -> ()
showNicks = \wg, isel, Nicks, nickSel, All, yearOp -> {
  if (!Nicks) {
    wg
      .removeAll()
      .add(Q("table")
        .att("align", "center")
        .add(Q("tr")
          .add(Q("td")
            .klass("frame")
            .text(II("Without data")))))
    ;
    return;
  }

  storage.put(key, nickSel);
  Lopts = [];
  firstV = [true];
  EOp = []; // [<menuEntry]
  for (nk = Nicks) {
    if (firstV!) firstV! = false;
    else arr.push(Lopts, menu.separator());

    E = menu.toption(nk, nk, \ -> showNicks(wg, isel, Nicks, nk, All, yearOp););
    if (nk == nickSel) arr.push(EOp, E);
    arr.push(Lopts, E);
  }
  menuWg = menu.mk(Lopts, [], nickSel, false);
  if (EOp) EOp!.wg.klass("frameMenu").style("");

  Entries = all.form(All, isel, nickSel, yearOp);
  LeOp = Entries
    ? [arr.peek(Entries)]
    : []
  ;

  table = Q("table")
    .klass("border")
    .att("align", "center")
    .add(Q("tr")
      .add(Q("td")
        .klass("header")
        .text(II("Date")))
      .add(Q("td").text(" "))
      .add(Q("td")
        .klass("header")
        .text(II("Stocks")))
      .add(Q("td")
        .klass("header")
        .text(II("Price")))
      .add(Q("td")
        .klass("header")
        .text(II("Total")))
      .add(Q("td").text(" "))
      .add(Q("td")
        .klass("header")
        .text(II("Stocks")))
      .add(Q("td")
        .klass("header")
        .text(II("Price")))
      .add(Q("td")
        .klass("header")
        .text(II("Total")))
      .add(Q("td").text(" "))
      .add(Q("td")
        .klass("header")
        .text(II("Stocks")))
      .add(Q("td")
        .klass("header")
        .text(II("Price")))
      .add(Q("td")
        .klass("header")
        .text(II("Total")))
      .add(Q("td").text(" "))
      .add(Q("td").text(" "))
      .add(Q("td")
        .klass("header")
        .text(II("Income")))
      .add(Q("td")
        .klass("header")
        .text(II("Profits")))
      .add(Q("td")
        .klass("header")
        .text(II("Fees"))))
    .adds(arr.map(Entries, \E -> return mkRow(E);))
    .add(Q("tr")
      .add(Q("td")
        .att("colspan", "16"))
      .add(Q("td")
        .att("colspan", "2")
        .add(Q("hr"))))
    .add(LeOp
      ? Q("tr")
        .add(Q("td")
          .att("colspan", "14")
          .style("text-align: right")
          .text(II("Sum") + ":"))
        .add(Q("td").text(" "))
        .add(Q("td").text(" "))
        .add(Q("td")
          .klass("number")
          .style("background:" + bk1)
          .text(math.toIso(LeOp!.ttProfits, 2)))
        .add(Q("td")
          .klass("number")
          .style("background:" + (LeOp!.ttFees > 0 ? bk1 : bk0))
          .text(LeOp!.ttFees > 0 ? math.toIso(LeOp!.ttFees, 2) : ""))
      : Q("tr")
          .add(Q("td")
            .att("colspan", "17")
            .style("text-align: center")
            .text(II("Without Data")))
      )
  ;

  wg
    .removeAll()
    .add(menuWg)
    .add(Q("div")
      .klass("head")
      .text(II("Form")))
    .add(table)
  ;
};

// \<formRow> -> <domo>
mkRow = \E -> {
  bkb = "#fff0e0";
  bks = "#e0f0ff";
  bkt = "#f0f0f0";
  return Q("tr")
    .add(Q("td")
      .klass("number2")
      .text(E.date))
    .add(Q("td"))
    .add(Q("td")
      .klass("number2")
      .style("background:" + bkb)
      .text(E.bs == 0 ? "" : math.toIso(E.bs, 0)))
    .add(Q("td")
      .klass("number")
      .style("background:" + bkb)
      .text(E.bs == 0 ? "" : math.toIso(E.bp, 4)))
    .add(Q("td")
      .klass("number")
      .style("background:" + bkb)
      .text(E.bs == 0 ? "" : math.toIso(E.bt, 2)))
    .add(Q("td"))
    .add(Q("td")
      .klass("number2")
      .style("background:" + bks)
      .text(E.ss == 0 ? "" : math.toIso(E.ss, 0)))
    .add(Q("td")
      .klass("number")
      .style("background:" + bks)
      .text(E.ss == 0 ? "" : math.toIso(E.sp, 4)))
    .add(Q("td")
      .klass("number")
      .style("background:" + bks)
      .text(E.ss == 0 ? "" : math.toIso(E.st, 2)))
    .add(Q("td"))
    .add(Q("td")
      .klass("number2")
      .style("background:" + bkt)
      .text(math.toIso(E.ts, 0)))
    .add(Q("td")
      .klass("number")
      .style("background:" + bkt)
      .text(E.ts == 0 ? "" : math.toIso(E.tp, 4)))
    .add(Q("td")
      .klass("number")
      .style("background:" + bkt)
      .text(math.toIso(E.tt, 2)))
    .add(Q("td"))
    .add(Q("td"))
    .add(Q("td")
      .klass("number")
      .style("background:" + (E.profits ? bk1 : bk0))
      .text(E.profits
          ? math.toIso(E.profits! + E.st, 2)
          : ""
        ))
    .add(Q("td")
      .klass("number")
      .style("background:" + (E.profits ? bk1 : bk0))
      .text(E.profits ? math.toIso(E.profits!, 2): ""))
    .add(Q("td")
      .klass("number")
      .style("background:" + (E.fees ? bk1 : bk0))
      .text(E.fees ? math.toIso(E.fees!, 2) : ""))
  ;
};
