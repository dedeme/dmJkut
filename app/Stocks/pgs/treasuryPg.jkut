// Copyright 10-Aug-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Treasury page.

import "libdm/menu";
import "data/all";
import "data/year";
import "i18n";

Q = ui.q;
II = i18n.tlt;

/// \<domo>, [n] -> ()
mk = async \wg, yearOp -> {
  All = await all.request();

  lastYear = yearOp ? yearOp! : all.lastYearId(All);

  Lopts = [];
  firstV = [true];
  for (myear = all.yearIds(All)) {
    if (firstV!) firstV! = false;
    else arr.push(Lopts, menu.separator());

    arr.push(Lopts, menu.toption(
      myear, myear, \ -> mk(wg, [myear]);
    ));
  }
  menuWg = menu.mk(Lopts, [], lastYear, false);

  YearOp = dic.get(All, lastYear);
  if (!YearOp) {
    ui.alert(i18n.fmt(II("Year %0 not found"), [lastYear]));
    arr.push(YearOp, All[all.lastYearId(All)]);
  }
  Year = YearOp!;

  D = year.treasury(Year);

  wg
    .removeAll()
    .add(menuWg)
    .add(Q("div")
      .klass("head")
      .text(II("Summary")))
    .add(Q("table")
      .klass("border")
      .att("align", "center")
      .add(Q("tr")
        .add(Q("td")
          .style("text-align: right; width: 80px")
          .text(II("Profits") + ":"))
        .add(Q("td")
          .klass("number")
          .text(math.toIso(D.summary, 2)))))
    .add(Q("div")
      .klass("head")
      .text(II("Annotations")))
    .add(Q("table")
      .klass("border")
      .att("align", "center")
      .add(Q("tr")
        .add(Q("td")
          .klass("header")
          .text(II("Nick")))
        .add(Q("td")
          .klass("header")
          .text(II("Stocks")))
        .add(Q("td")
          .klass("header")
          .text(II("Sold")))
        .add(Q("td")
          .klass("header")
          .text(II("Bought")))
        .add(Q("td")
          .klass("header")
          .text(II("Profits"))))
      .adds(arr.map(D.entries, \E -> return Q("tr")
          .add(Q("td")
            .text(E.nick))
          .add(Q("td")
            .klass("number2")
            .text(math.toIso(E.stocks, 0)))
          .add(Q("td")
            .klass("number")
            .text(math.toIso(E.total, 2)))
          .add(Q("td")
            .klass("number")
            .text(math.toIso(E.total - E.profits!, 2)))
          .add(Q("td")
            .klass("number")
            .text(math.toIso(E.profits!, 2)))
        ;))
    )
  ;

};
