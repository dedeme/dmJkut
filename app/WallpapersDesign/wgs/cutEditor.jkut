// Copyright 30-May-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Editor of cut operation.

import "libdm/modalBox";
import "data/cts";
import "data/image";
import "data/imgCut";
import "i18n";

Q = ui.q;
II = i18n.tlt;

/// \<domo>, <image>, (\->()) -> ()
mk = \ImgDiv, Image, onChange -> {
  Cut = Image.Cut;
  IsActivated = [Cut ? true : false];

  // \s, s, n -> <domo>
  mkIn = \id, nextId, value -> return ui.changePoint(ui.field(nextId)
      .att("id", id)
      .style("width:80px")
      .value(value)
    );;

  df = cts.pixelsCut;
  Top = mkIn("top", "right", IsActivated! ? Cut!.top : df);
  Left = mkIn("left", "top", IsActivated! ? Cut!.left : df);
  Bottom = mkIn("bottom", "left", IsActivated! ? Cut!.bottom : df);
  Right = mkIn("right", "bottom", IsActivated! ? Cut!.right : df);

  EditorDiv = Q("div");

  MkEditor = [[]];

  // Control -------------------------------------------------------------------

  // \b -> ()
  activate = \value -> {
    IsActivated! = value;
    MkEditor!(EditorDiv);
  };

  // \<event> -> ()
  restore = \ev -> {
    Cut = Image.Cut;
    IsActivated = [Cut ? true : false];

    df = cts.pixelsCut;
    Top.value(IsActivated! ? Cut!.top : df);
    Left.value(IsActivated! ? Cut!.left : df);
    Bottom.value(IsActivated! ? Cut!.bottom : df);
    Right.value(IsActivated! ? Cut!.right : df);

    onChange(Image);
    MkEditor!(EditorDiv);
  };

  // \<event> -> ()
  update = \ev -> {
    // \<domo> -> n
    value = \I -> {
      R = math.fromStr(I.getValue());
      if (!R) {
        arr.push(R, cts.pixelsCut);
        I.value("" + R!);
      }
      return R!;
    };
    Cut = IsActivated!
      ? [ imgCut.mk(
            value(Left), value(Top), value(Right), value(Bottom)
          )]
      : []
    ;

    onChange(image.setCut(Image, Cut));
    MkEditor!(EditorDiv);
  };

  // \<event> -> ()
  close = \ev -> modalBox.show(cts.Box, false);;

  // View ----------------------------------------------------------------------

  // \<domo> -> ()
  MkEditor! = \Div -> {
    Left.disabled(!IsActivated!);
    Top.disabled(!IsActivated!);
    Right.disabled(!IsActivated!);
    Bottom.disabled(!IsActivated!);

    Div
      .removeAll()
      .add(Q("table")
        .att("align", "center")
        .add(Q("tr")
          .add(Q("td")
            .att("colspan", 3)
            .add(IsActivated!
                ? ui.link(\ev -> activate(false);)
                    .klass("link")
                    .text(II("Deactivate"))
                : ui.link(\ev -> activate(true);)
                    .klass("link")
                    .text(II("Activate"))
              )))
        .add(Q("tr")
          .add(Q("td")
            .text(II("Left")))
          .add(Q("td"))
          .add(Q("td")
            .text(II("Top"))))
        .add(Q("tr")
          .add(Q("td")
            .add(Left))
          .add(Q("td"))
          .add(Q("td")
            .add(Top)))
        .add(Q("tr")
          .add(Q("td")
            .text(II("Right")))
          .add(Q("td"))
          .add(Q("td")
            .text(II("Bottom"))))
        .add(Q("tr")
          .add(Q("td")
            .add(Right))
          .add(Q("td"))
          .add(Q("td")
            .add(Bottom))))
    ;
  };

  MkEditor!(EditorDiv);

  cts.BoxContent
    .removeAll()
    .add(Q("table")
      .klass("main")
      .add(Q("tr")
        .add(Q("td"))
        .add(Q("td")
          .style("text-align:right")
          .add(ui.link(close)
            .klass("link")
            .text(II("Close")))))
      .add(Q("tr")
        .add(Q("td")
          .style("text-align:left")
          .add(ui.link(update)
            .klass("link")
            .text(II("Update")))
          .add(Q("span")
            .html("&nbsp;&nbsp;"))
          .add(ui.link(restore)
            .klass("link")
            .text(II("Restore"))))
        .add(Q("td"))))
    .add(Q("hr"))
    .add(EditorDiv)
    .add(Q("hr"))
    .add(ImgDiv)
  ;

};
