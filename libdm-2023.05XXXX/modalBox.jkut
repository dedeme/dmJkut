// Copyright 17-May-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// ModalBox to show components.

Q = ui.q;

/// Constructor.
///   content  : Widget to show.
///   withClose: If it is 'true', ModalBox show a symbol [ X ] to close
///              itself.
/// Return:
///   Dictionary with key 'wg'. This key returns the wigdet of <modalBox> to
///   put in page.
/// \<domo>, b -> d<modalBox>
mk = \content, withClose -> {
  wg = Q("div")
    .style(
      "display: none;" + //Hidden by default
      "position: fixed;" + //Stay in place
      "z-index: 1;" + //Sit on top
      "padding-top: 100px;" + //Location of the box
      "left: 0;" +
      "top: 0;" +
      "width: 100%;" + //Full width
      "height: 100%;" + //Full height
      "overflow: auto;" + //Enable scroll if needed
      "background-color: rgb(0,0,0);" + //Fallback color
      "background-color: rgba(0,0,0,0.4);" + //Black opacity
      "text-align: center;"
    )
  ;

  tb = Q("table")
    .att("align", "center")
    .style(
      "background-color: rgb(250, 250, 250);" +
      "border: 1px solid rgb(110,130,150);" +
      "padding: 4px;border-radius: 4px;"
    );

  if (withClose)
    tb.add(Q("tr")
      .add(Q("td")
        .style("width:100%;text-align:right;padding-bottom:5px")
        .add(Q("span")
          .text("["))
        .add(ui.link(\ev -> show({wg}, false);)
          .style(
            "cursor:pointer;text-decoration: none; font-family: sans;" +
            "color: #000080;font-weight: normal;font-size:14px;"
          ).text(" X "))
        .add(Q("span")
          .text("]"))));

  tb.add(Q("tr")
    .add(Q("td")
      .add(content)));

  wg.add(tb);

  return {wg};
};

/// Show or hidde the box.
/// \<modalBox>, b -> ()
show = \Mbox, value ->
  if (value) Mbox.wg.setStyle("display", "block");
  else Mbox.wg.setStyle("display", "none");;


